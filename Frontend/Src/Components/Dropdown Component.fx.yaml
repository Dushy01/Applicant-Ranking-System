"'Dropdown Component' As CanvasComponent":
    Clear: =true
    DropdownHintText: ="Select your department"
    DropdownItems: |-
        =Table(
            {
                Title: "D365 & PowerApps",
                ID: 1
            },
            {
                Title: "Data Science",
                ID: 2
            },
            {
                Title: "Cloud Infra",
                ID: 3
            },
            {
                Title: "Power BI",
                ID: 4
            },
            {
                Title: "Databricks",
                ID: 5
            },
            {
                Title: "App Development",
                ID: 6
            }
        )
    DropdownSelectedValue: =gblSelectedDropdownValue
    DropdownTempheight: =If(gblDropdownOpen,cntDropdownItemsDC.Y+ cntDropdownItemsDC.Height + 2,txtSelectedDropdownValueDC.Y + txtSelectedDropdownValueDC.Height+ 2)
    DropdownTitle: ="Department"
    Fill: =RGBA(0, 0, 0, 0)
    Height: =Self.DropdownTempheight
    Width: =260
    X: =0
    Y: =0
    ZIndex: =1

    lblTitleDC As label:
        Color: =RGBA(72, 78, 86, 1)
        Font: ="Poppins"
        Height: =20
        PaddingBottom: =0
        PaddingLeft: =2
        PaddingRight: =0
        PaddingTop: =0
        Size: =10
        Text: ='Dropdown Component'.DropdownTitle
        Width: =Len(Self.Text)*10
        ZIndex: =1

    txtSelectedDropdownValueDC As text:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =0
        Color: =RGBA(168, 177, 184, 1)
        Default: |-
            =If(
                !IsBlank(gblSelectedDropdownValue),
                gblSelectedDropdownValue.Title
            )
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(84, 93, 102, 1)
        DisabledFill: =RGBA(250, 250, 250, 1)
        DisplayMode: =If(gblDropdownOpen,DisplayMode.Edit,DisplayMode.Disabled)
        Fill: =RGBA(250, 250, 250, 1)
        Font: ="Poppins"
        HintText: =If(IsBlank(gblSelectedDropdownValue),'Dropdown Component'.DropdownHintText)
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =Self.Color
        HoverFill: =Self.Fill
        PaddingLeft: =If(gblDropdownOpen,34,12)
        RadiusBottomLeft: =6
        RadiusBottomRight: =6
        RadiusTopLeft: =6
        RadiusTopRight: =6
        Size: =10
        Width: =Parent.Width-Self.X * 2
        X: =2
        Y: =lblTitleDC.Y + lblTitleDC.Height + 7
        ZIndex: =2

    imgDownArrowIconDC As image:
        Height: =Self.Width
        Image: |-
            ="data:image/svg+xml; utf-8 , " & EncodeUrl(
                If(
                    gblDropdownOpen,
                    "<svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
            <path d='M7 14L12 9L17 14' stroke='#7D8893' stroke-linecap='round' stroke-linejoin='round'/>
            </svg>
            ",
                    "<svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
            <path d='M17 10L12 15L7 10' stroke='#7D8893' stroke-linecap='round' stroke-linejoin='round'/>
            </svg>
            "
                )
            )
        OnSelect: =Set(gblDropdownOpen,false)
        Width: =24
        X: =txtSelectedDropdownValueDC.Width -Self.Width*1.5
        Y: =txtSelectedDropdownValueDC.Y + (txtSelectedDropdownValueDC.Height-Self.Height)/2
        ZIndex: =3

    icnOpenDropdownDC As icon.Add:
        Height: =txtSelectedDropdownValueDC.Height
        Icon: =Blank()
        OnSelect: =Set(gblDropdownOpen,!gblDropdownOpen);Reset(galDropdownItemsDC)
        Visible: =!gblDropdownOpen
        Width: =txtSelectedDropdownValueDC.Width
        X: =txtSelectedDropdownValueDC.X
        Y: =txtSelectedDropdownValueDC.Y
        ZIndex: =4

    cntDropdownItemsDC As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.None
        Fill: =RGBA(255, 255, 255, 1)
        Height: |-
            =If(
                gblSelectedDropdownValue.Title = txtSelectedDropdownValueDC.Text,
                4 * galDropdownItemsDC.TemplateHeight,
                Min(
                    4 * galDropdownItemsDC.TemplateHeight,
                    CountRows(
                        Search(
                            galDropdownItemsDC.AllItems,
                            txtSelectedDropdownValueDC.Text,
                            Title
                        )
                    ) * galDropdownItemsDC.TemplateHeight
                )
            ) + (galDropdownItemsDC.TemplatePadding* 2)
        Visible: =gblDropdownOpen
        Width: =txtSelectedDropdownValueDC.Width
        X: =txtSelectedDropdownValueDC.X
        Y: =txtSelectedDropdownValueDC.Y + txtSelectedDropdownValueDC.Height+ 7
        ZIndex: =5

        galDropdownItemsDC As gallery.galleryVertical:
            '#CopilotOverlayLabel': ="Filtered"
            DelayItemLoading: =true
            Fill: =RGBA(250, 250, 250, 1)
            Height: =Parent.Height
            Items: =If(gblSelectedDropdownValue.Title = txtSelectedDropdownValueDC.Text,'Dropdown Component'.DropdownItems,Search('Dropdown Component'.DropdownItems,txtSelectedDropdownValueDC.Text,Title))
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            ShowScrollbar: =CountRows(If(gblSelectedDropdownValue.Title = txtSelectedDropdownValueDC.Text,'Dropdown Component'.DropdownItems,Search('Dropdown Component'.DropdownItems,txtSelectedDropdownValueDC.Text,Title)))>4
            TemplatePadding: =2
            TemplateSize: =35
            Width: =Parent.Width    
            ZIndex: =1

            lblItemDropdownValueDC As label:
                Color: =RGBA(98, 109, 120, 1)
                Font: ="Poppins"
                Height: =Parent.TemplateHeight
                OnSelect: |-
                    =Set(
                        gblSelectedDropdownValue,
                        ThisItem
                    );
                    Set(
                        gblDropdownOpen,
                        false
                    )
                PaddingLeft: =10
                Size: =8
                Text: =ThisItem.Title
                Width: =Parent.TemplateWidth
                ZIndex: =1

    imgSearchIconDC As image:
        Height: =Self.Width
        Image: |-
            ="data:image/svg+xml; utf-8 , " & EncodeUrl(
                "<svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
            <path d='M19.9999 20L15.9499 15.95M15.9499 15.95C16.5999 15.2999 17.1156 14.5282 17.4674 13.6789C17.8192 12.8296 18.0002 11.9193 18.0002 11C18.0002 10.0807 17.8192 9.17039 17.4674 8.32107C17.1156 7.47175 16.5999 6.70003 15.9499 6.04999C15.2998 5.39995 14.5281 4.8843 13.6788 4.5325C12.8295 4.1807 11.9192 3.99963 10.9999 3.99963C10.0806 3.99963 9.17027 4.1807 8.32095 4.5325C7.47163 4.8843 6.69991 5.39995 6.04987 6.04999C4.73705 7.36281 3.99951 9.14338 3.99951 11C3.99951 12.8566 4.73705 14.6372 6.04987 15.95C7.36269 17.2628 9.14326 18.0003 10.9999 18.0003C12.8565 18.0003 14.637 17.2628 15.9499 15.95Z' stroke='#7D8893' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/>
            </svg>
            "
            )
        OnSelect: =Set(gblDropdownOpen,false)
        Visible: =gblDropdownOpen
        Width: =18
        X: =12
        Y: =txtSelectedDropdownValueDC.Y + (txtSelectedDropdownValueDC.Height-Self.Height)/2
        ZIndex: =6

    tglClearDC As toggleSwitch:
        Default: ='Dropdown Component'.Clear
        Height: =20
        OnCheck: =Set(gblSelectedDropdownValue,Blank())
        OnUncheck: =Set(gblSelectedDropdownValue,Blank())
        Visible: =false
        Width: =40
        X: =220
        ZIndex: =7

